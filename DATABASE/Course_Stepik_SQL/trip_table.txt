/*
Таблица "Командировки"
Запросы на выборку данных из таблицы
*/
--1.6.1
/*
Вывести из таблицы trip информацию о командировках тех сотрудников,
фамилия которых заканчивается на букву «а»,
в отсортированном по убыванию даты последнего дня командировки виде. 
В результат включить столбцы name, city, per_diem, date_first, date_last.
*/

SELECT
  name,
  city,
  per_diem,
  date_first,
  date_last
FROM
  trip
WHERE
  name LIKE '%а _._.'
ORDER BY
  date_last DESC;

--1.6.2
/*
Вывести в алфавитном порядке фамилии и инициалы тех сотрудников, 
которые были в командировке в Москве.
*/

SELECT
  name
FROM
  trip
WHERE
  city = 'Москва'
GROUP BY
  name
ORDER BY
  name;

--1.6.3
/*
Для каждого города посчитать, сколько раз сотрудники в нем были.
Информацию вывести в отсортированном в алфавитном порядке по названию городов.
Вычисляемый столбец назвать Количество. 
*/

SELECT
  city,
  count(city) AS 'Количество'
FROM
  trip
GROUP BY
  city
ORDER BY
  city;

--1.6.4
/*
Вывести два города,
в которых чаще всего были в командировках сотрудники.
Вычисляемый столбец назвать Количество. 
*/

SELECT 
  city, 
  count(city) AS 'Количество' 
FROM 
  trip 
GROUP BY 
  city 
ORDER BY 
  Количество DESC 
LIMIT 
  2;

--1.6.5
/*
Вывести информацию о командировках во все города кроме Москвы и Санкт-Петербурга
(фамилии и инициалы сотрудников, город ,  длительность командировки в днях,
при этом первый и последний день относится к периоду командировки).
Информацию вывести в упорядоченном по убыванию длительности поездки,
а потом по убыванию названий городов (в обратном алфавитном порядке).
Для вычитания двух дат используется функция DATEDIFF(дата_1, дата_2),
результатом которой является количество дней между дата_1 и дата_2.
Увеличьте разницу на 1, чтобы включить первый день командировки.
*/

SELECT 
  name, 
  city, 
  (
    DATEDIFF(date_last, date_first) + 1
  ) AS 'Длительность' 
FROM 
  trip 
WHERE 
  city <> 'Москва' 
  AND city <> 'Санкт-Петербург' 
ORDER BY 
  Длительность DESC, 
  city DESC;


--1.6.6
/*
Вывести информацию о командировках сотрудника(ов),
которые были самыми короткими по времени.
*/

SELECT 
  name, 
  city, 
  date_first, 
  date_last 
FROM 
  trip 
WHERE 
  (
    DATEDIFF(date_last, date_first)
  ) = (
    SELECT 
      MIN(
        DATEDIFF(date_last, date_first)
      ) 
    FROM 
      trip
  );

--1.6.7
/*
Вывести информацию о командировках,
начало и конец которых относятся к одному месяцу (год может быть любой).
Результат отсортировать сначала  в алфавитном порядке по названию города,
а затем по фамилии сотрудника .
*/

SELECT
  name,
  city,
  date_first,
  date_last
FROM
  trip
WHERE
  MONTH(date_first) = MONTH(date_last)
ORDER BY
  city,
  name;

--1.6.8
/*
Вывести название месяца и количество командировок для каждого месяца.
Считаем, что командировка относится к некоторому месяцу,
если она началась в этом месяце.
Информацию вывести сначала в отсортированном по убыванию количества,
а потом в алфавитном порядке по названию месяца виде.
Название столбцов – Месяц и Количество.
*/

SELECT 
  MONTHNAME(date_first) AS 'Месяц', 
  COUNT(
    MONTHNAME(date_first)
  ) AS 'Количество' 
FROM 
  trip 
GROUP BY 
  MONTHNAME(date_first) 
ORDER BY 
  Количество DESC, 
  Месяц;

--1.6.9
/*
Вывести сумму суточных (произведение количества дней командировки и размера суточных) для командировок,
первый день которых пришелся на февраль или март 2020 года.
Значение суточных для каждой командировки занесено в столбец  per_diem.
Информацию отсортировать сначала  в алфавитном порядке по фамилиям сотрудников,
а затем по убыванию суммы суточных.
*/

SELECT 
  name, 
  city, 
  date_first, 
  (
    (
      DATEDIFF(date_last, date_first) + 1
    ) * per_diem
  ) AS 'Сумма' 
FROM 
  trip 
WHERE 
  MONTH(date_first) IN (2, 3) 
  AND YEAR(date_first) = 2020 
ORDER BY 
  name, 
  Сумма DESC;

--1.6.10
/*
Вывести фамилию с инициалами и общую сумму суточных,
полученных за все командировки для тех сотрудников,
которые были в командировках больше чем 3 раза,
в отсортированном по убыванию сумм суточных виде.
*/

SELECT
  name,
  SUM(
    (
      DATEDIFF(date_last, date_first) + 1
    ) * per_diem
  ) AS 'Сумма'
FROM
  trip
GROUP BY
  name
HAVING
  COUNT(name) > 3
ORDER BY
  Сумма DESC;

